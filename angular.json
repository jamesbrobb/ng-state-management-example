{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "shared": {
      "projectType": "library",
      "root": "libraries/shared",
      "sourceRoot": "libraries/shared/src",
      "prefix": "lib",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "project": "libraries/shared/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libraries/shared/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "libraries/shared/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "tsConfig": "libraries/shared/tsconfig.spec.json",
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ]
          }
        }
      }
    },
    "location-weather": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "projects/location-weather",
      "sourceRoot": "projects/location-weather/src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "options": {
            "customWebpackConfig": {
              "path": "projects/location-weather/src/custom-webpack.config.ts"
            },
            "outputPath": "dist/location-weather",
            "index": "projects/location-weather/src/index.html",
            "main": "projects/location-weather/src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "projects/location-weather/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "projects/location-weather/src/favicon.ico",
              "projects/location-weather/src/assets"
            ],
            "styles": [
              "@angular/material/prebuilt-themes/indigo-pink.css",
              "projects/location-weather/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "outputHashing": "all",
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ]
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            },
            "elf-dev": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [{
                "replace": "projects/location-weather/src/app/app.config.ts",
                "with": "projects/location-weather/src/configurations/elf/app.config.ts"
              }, {
                "replace": "projects/location-weather/src/app/app.providers.ts",
                "with": "projects/location-weather/src/configurations/elf/app.providers.ts"
              }, {
                "replace": "projects/location-weather/src/app/weather/weather.providers.ts",
                "with": "projects/location-weather/src/configurations/elf/weather.providers.ts"
              }]
            },
            "elf-prod": {
              "outputPath": "dist/location-weather/elf",
              "baseHref": "/elf/",
              "outputHashing": "all",
              "fileReplacements": [{
                "replace": "projects/location-weather/src/app/app.config.ts",
                "with": "projects/location-weather/src/configurations/elf/app.config.ts"
              }, {
                "replace": "projects/location-weather/src/app/app.providers.ts",
                "with": "projects/location-weather/src/configurations/elf/app.providers.ts"
              }, {
                "replace": "projects/location-weather/src/app/weather/weather.providers.ts",
                "with": "projects/location-weather/src/configurations/elf/weather.providers.ts"
              }]
            },
            "ngrx-dev": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [{
                "replace": "projects/location-weather/src/app/app.config.ts",
                "with": "projects/location-weather/src/configurations/ngrx/app.config.ts"
              }, {
                "replace": "projects/location-weather/src/app/app.providers.ts",
                "with": "projects/location-weather/src/configurations/ngrx/app.providers.ts"
              }, {
                "replace": "projects/location-weather/src/app/weather/weather.providers.ts",
                "with": "projects/location-weather/src/configurations/ngrx/weather.providers.ts"
              }]
            },
            "ngrx-prod": {
              "outputPath": "dist/location-weather/ngrx",
              "baseHref": "/ngrx/",
              "outputHashing": "all",
              "fileReplacements": [{
                "replace": "projects/location-weather/src/app/app.config.ts",
                "with": "projects/location-weather/src/configurations/ngrx/app.config.ts"
              }, {
                "replace": "projects/location-weather/src/app/app.providers.ts",
                "with": "projects/location-weather/src/configurations/ngrx/app.providers.ts"
              }, {
                "replace": "projects/location-weather/src/app/weather/weather.providers.ts",
                "with": "projects/location-weather/src/configurations/ngrx/weather.providers.ts"
              }]
            },
            "ngxs-dev": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [{
                "replace": "projects/location-weather/src/app/app.config.ts",
                "with": "projects/location-weather/src/configurations/ngxs/app.config.ts"
              }, {
                "replace": "projects/location-weather/src/app/app.providers.ts",
                "with": "projects/location-weather/src/configurations/ngxs/app.providers.ts"
              }, {
                "replace": "projects/location-weather/src/app/weather/weather.providers.ts",
                "with": "projects/location-weather/src/configurations/ngxs/weather.providers.ts"
              }]
            },
            "ngxs-prod": {
              "outputPath": "dist/location-weather/ngxs",
              "baseHref": "/ngxs/",
              "outputHashing": "all",
              "fileReplacements": [{
                "replace": "projects/location-weather/src/app/app.config.ts",
                "with": "projects/location-weather/src/configurations/ngxs/app.config.ts"
              }, {
                "replace": "projects/location-weather/src/app/app.providers.ts",
                "with": "projects/location-weather/src/configurations/ngxs/app.providers.ts"
              }, {
                "replace": "projects/location-weather/src/app/weather/weather.providers.ts",
                "with": "projects/location-weather/src/configurations/ngxs/weather.providers.ts"
              }]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-builders/custom-webpack:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "location-weather:build:production"
            },
            "development": {
              "browserTarget": "location-weather:build:development"
            },
            "elf": {
              "browserTarget": "location-weather:build:elf"
            },
            "ngrx": {
              "browserTarget": "location-weather:build:ngrx"
            },
            "ngxs": {
              "browserTarget": "location-weather:build:ngxs"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "location-weather:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "projects/location-weather/tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "projects/location-weather/src/favicon.ico",
              "projects/location-weather/src/assets"
            ],
            "styles": [
              "projects/location-weather/src/styles.scss"
            ],
            "scripts": []
          }
        }
      }
    },
    "elf": {
      "projectType": "library",
      "root": "libraries/elf",
      "sourceRoot": "libraries/elf/src",
      "prefix": "lib",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "project": "libraries/elf/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libraries/elf/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "libraries/elf/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "tsConfig": "libraries/elf/tsconfig.spec.json",
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ]
          }
        }
      }
    },
    "ngrx": {
      "projectType": "library",
      "root": "libraries/ngrx",
      "sourceRoot": "libraries/ngrx/src",
      "prefix": "lib",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "project": "libraries/ngrx/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libraries/ngrx/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "libraries/ngrx/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "tsConfig": "libraries/ngrx/tsconfig.spec.json",
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ]
          }
        }
      }
    },
    "ngxs": {
      "projectType": "library",
      "root": "libraries/ngxs",
      "sourceRoot": "libraries/ngxs/src",
      "prefix": "lib",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "project": "libraries/ngxs/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libraries/ngxs/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "libraries/ngxs/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "tsConfig": "libraries/ngxs/tsconfig.spec.json",
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ]
          }
        }
      }
    }
  },
  "cli": {
    "analytics": false
  }
}
